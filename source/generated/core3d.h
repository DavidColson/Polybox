#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input shaders\core3d.shader --output source\generated\core3d.h --slang hlsl5 --bytecode --errfmt msvc

    Overview:
    =========
    Shader program: 'core3D':
        Get shader desc: core3D_shader_desc(sg_query_backend());
        Vertex shader: vs_core3D
            Attributes:
                ATTR_vs_core3D_pos => 0
                ATTR_vs_core3D_color0 => 1
                ATTR_vs_core3D_texcoord => 2
                ATTR_vs_core3D_normal => 3
            Uniform block 'vs_core3d_params':
                C struct: vs_core3d_params_t
                Bind slot: SLOT_vs_core3d_params => 0
        Fragment shader: fs_core3D
            Uniform block 'fs_core3d_params':
                C struct: fs_core3d_params_t
                Bind slot: SLOT_fs_core3d_params => 0
            Image 'tex':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_tex => 0
            Sampler 'nearestSampler':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_nearestSampler => 0
            Image Sampler Pair 'tex_nearestSampler':
                Image: tex
                Sampler: nearestSampler
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before core3d.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_vs_core3D_pos (0)
#define ATTR_vs_core3D_color0 (1)
#define ATTR_vs_core3D_texcoord (2)
#define ATTR_vs_core3D_normal (3)
#define SLOT_vs_core3d_params (0)
#define SLOT_fs_core3d_params (0)
#define SLOT_tex (0)
#define SLOT_nearestSampler (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_core3d_params_t {
    Matrixf mvp;
    Matrixf model;
    Matrixf modelView;
    int lightingEnabled;
    uint8_t _pad_196[12];
    Vec4f lightDirection[3];
    Vec4f lightColor[3];
    Vec3f lightAmbient;
    int fogEnabled;
    Vec2f fogDepths;
    Vec2f targetResolution;
} vs_core3d_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_core3d_params_t {
    Vec4f fogColor;
} fs_core3d_params_t;
#pragma pack(pop)
/*
    cbuffer vs_core3d_params : register(b0)
    {
        row_major float4x4 _20_mvp : packoffset(c0);
        row_major float4x4 _20_model : packoffset(c4);
        row_major float4x4 _20_modelView : packoffset(c8);
        int _20_lightingEnabled : packoffset(c12);
        float4 _20_lightDirection[3] : packoffset(c13);
        float4 _20_lightColor[3] : packoffset(c16);
        float3 _20_lightAmbient : packoffset(c19);
        int _20_fogEnabled : packoffset(c19.w);
        float2 _20_fogDepths : packoffset(c20);
        float2 _20_targetResolution : packoffset(c20.z);
    };


    static float4 gl_Position;
    static float3 pos;
    static float fogDensity;
    static float4 color;
    static float4 color0;
    static float3 normal;
    static float2 uv;
    static float2 texcoord;

    struct SPIRV_Cross_Input
    {
        float3 pos : TEXCOORD0;
        float4 color0 : TEXCOORD1;
        float2 texcoord : TEXCOORD2;
        float3 normal : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        noperspective float4 color : TEXCOORD0;
        noperspective float2 uv : TEXCOORD1;
        float fogDensity : TEXCOORD2;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        float2 _26 = _20_targetResolution * 0.5f;
        float4 _40 = float4(pos, 1.0f);
        float4 _41 = mul(_40, _20_mvp);
        float _48 = _41.w;
        float3 _50 = _41.xyz / _48.xxx;
        float4 _200 = _41;
        _200.x = _50.x;
        _200.y = _50.y;
        _200.z = _50.z;
        float2 _66 = floor(_26 * _200.xy) / _26;
        float4 _206 = _200;
        _206.x = _66.x;
        _206.y = _66.y;
        float3 _75 = _206.xyz * _48;
        float4 _211 = _206;
        _211.x = _75.x;
        _211.y = _75.y;
        _211.z = _75.z;
        gl_Position = _211;
        if (_20_fogEnabled == 1)
        {
            float4 _107 = mul(_40, _20_modelView);
            fogDensity = 1.0f - clamp((_20_fogDepths.y - abs(_107.z / _107.w)) / (_20_fogDepths.y - _20_fogDepths.x), 0.0f, 1.0f);
        }
        if (_20_lightingEnabled == 0)
        {
            color = color0;
        }
        else
        {
            if (_20_lightingEnabled == 1)
            {
                color = float4(color0.xyz * (_20_lightAmbient + (_20_lightColor[0].xyz * max(dot(normalize(_20_lightDirection[0].xyz), mul(float4(normal, 0.0f), _20_model).xyz), 0.0f))), color0.w);
            }
        }
        uv = texcoord;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        pos = stage_input.pos;
        color0 = stage_input.color0;
        normal = stage_input.normal;
        texcoord = stage_input.texcoord;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.fogDensity = fogDensity;
        stage_output.color = color;
        stage_output.uv = uv;
        return stage_output;
    }
*/
static const uint8_t vs_core3D_bytecode_hlsl5[2788] = {
    0x44,0x58,0x42,0x43,0x37,0x55,0xeb,0x0b,0x5c,0x3d,0x1a,0x9d,0x6e,0x28,0x5e,0xcd,
    0x65,0x64,0xa1,0x47,0x01,0x00,0x00,0x00,0xe4,0x0a,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x18,0x04,0x00,0x00,0x94,0x04,0x00,0x00,0x1c,0x05,0x00,0x00,
    0x48,0x0a,0x00,0x00,0x52,0x44,0x45,0x46,0xdc,0x03,0x00,0x00,0x01,0x00,0x00,0x00,
    0x70,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xfe,0xff,
    0x10,0x81,0x00,0x00,0xb1,0x03,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x76,0x73,0x5f,0x63,0x6f,0x72,0x65,0x33,
    0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x00,0xab,0xab,0xab,0x5c,0x00,0x00,0x00,
    0x0a,0x00,0x00,0x00,0x88,0x00,0x00,0x00,0x50,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x18,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x2c,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x50,0x02,0x00,0x00,
    0x40,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x2c,0x02,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5a,0x02,0x00,0x00,0x80,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x2c,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x68,0x02,0x00,0x00,
    0xc0,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x80,0x02,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xa4,0x02,0x00,0x00,0xd0,0x00,0x00,0x00,0x30,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xc0,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xe4,0x02,0x00,0x00,
    0x00,0x01,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xf4,0x02,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x18,0x03,0x00,0x00,0x30,0x01,0x00,0x00,0x0c,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x30,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x54,0x03,0x00,0x00,
    0x3c,0x01,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x80,0x02,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x63,0x03,0x00,0x00,0x40,0x01,0x00,0x00,0x08,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x78,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x9c,0x03,0x00,0x00,
    0x48,0x01,0x00,0x00,0x08,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x78,0x03,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5f,0x32,0x30,0x5f,0x6d,0x76,0x70,0x00,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x00,0xab,0xab,0xab,0x02,0x00,0x03,0x00,0x04,0x00,0x04,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x00,0x5f,0x32,0x30,0x5f,
    0x6d,0x6f,0x64,0x65,0x6c,0x00,0x5f,0x32,0x30,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x56,
    0x69,0x65,0x77,0x00,0x5f,0x32,0x30,0x5f,0x6c,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,
    0x45,0x6e,0x61,0x62,0x6c,0x65,0x64,0x00,0x69,0x6e,0x74,0x00,0x00,0x00,0x02,0x00,
    0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x02,0x00,0x00,
    0x5f,0x32,0x30,0x5f,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x00,0x66,0x6c,0x6f,0x61,0x74,0x34,0x00,0xab,0xab,0x01,0x00,0x03,0x00,
    0x01,0x00,0x04,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb7,0x02,0x00,0x00,
    0x5f,0x32,0x30,0x5f,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x00,0xab,
    0x01,0x00,0x03,0x00,0x01,0x00,0x04,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0xb7,0x02,0x00,0x00,0x5f,0x32,0x30,0x5f,0x6c,0x69,0x67,0x68,0x74,0x41,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x00,0x66,0x6c,0x6f,0x61,0x74,0x33,0x00,0x01,0x00,0x03,0x00,
    0x01,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x03,0x00,0x00,
    0x5f,0x32,0x30,0x5f,0x66,0x6f,0x67,0x45,0x6e,0x61,0x62,0x6c,0x65,0x64,0x00,0x5f,
    0x32,0x30,0x5f,0x66,0x6f,0x67,0x44,0x65,0x70,0x74,0x68,0x73,0x00,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x00,0x01,0x00,0x03,0x00,0x01,0x00,0x02,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x71,0x03,0x00,0x00,0x5f,0x32,0x30,0x5f,0x74,0x61,0x72,0x67,
    0x65,0x74,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x00,0x4d,0x69,0x63,
    0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,
    0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,
    0x31,0x30,0x2e,0x31,0x00,0xab,0xab,0xab,0x49,0x53,0x47,0x4e,0x74,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x68,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x00,0x00,
    0x68,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x68,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03,0x03,0x00,0x00,
    0x68,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x07,0x07,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x80,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x68,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x68,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x03,0x0c,0x00,0x00,0x68,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x0e,0x00,0x00,0x71,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x0f,0x00,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x00,0xab,0xab,0xab,0x53,0x48,0x45,0x58,
    0x24,0x05,0x00,0x00,0x50,0x00,0x01,0x00,0x49,0x01,0x00,0x00,0x6a,0x08,0x00,0x01,
    0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,
    0xf2,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x32,0x10,0x10,0x00,
    0x02,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,0x03,0x00,0x00,0x00,
    0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x32,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x12,0x20,0x10,0x00,
    0x02,0x00,0x00,0x00,0x67,0x00,0x00,0x04,0xf2,0x20,0x10,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x02,0x00,0x00,0x00,0x10,0x00,0x00,0x09,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,
    0x0d,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,
    0x44,0x00,0x00,0x05,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x08,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,
    0x0d,0x00,0x00,0x00,0x38,0x00,0x00,0x08,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x56,0x15,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x06,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x03,0x00,0x00,0x00,
    0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,
    0x34,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,
    0x10,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x82,0x20,0x00,
    0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x72,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,
    0x01,0x00,0x00,0x00,0x20,0x00,0x00,0x08,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x07,0xf2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x37,0x00,0x00,0x0a,0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0x06,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,0x01,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x32,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x10,0x10,0x00,0x02,0x00,0x00,0x00,
    0x38,0x00,0x00,0x08,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x56,0x15,0x10,0x00,
    0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,0x00,0x00,0x00,0x00,0x09,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0a,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x46,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x32,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x46,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x08,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,0x00,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,
    0x0e,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x80,0xc1,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x1a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,
    0x00,0x00,0x00,0x0a,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x80,0x20,0x80,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x1a,0x80,0x20,0x00,
    0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x0e,0x20,0x00,0x07,0x12,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x20,0x00,0x00,0x08,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,0x3a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x13,0x00,0x00,0x00,0x01,0x00,0x00,0x07,0x12,0x20,0x10,0x00,0x02,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x08,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x56,0x15,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x08,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x0e,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x0b,
    0x32,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3f,
    0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,
    0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0xc2,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x06,0x04,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x04,0x10,0x00,
    0x01,0x00,0x00,0x00,0x41,0x00,0x00,0x05,0xc2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0xa6,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x0e,0x00,0x00,0x07,0x32,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xe6,0x0a,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x72,0x20,0x10,0x00,0x03,0x00,0x00,0x00,
    0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0x82,0x20,0x10,0x00,0x03,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,
    0x26,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x1d,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,
};
/*
    static const int _164[8] = { 0, 32, 8, 40, 2, 34, 10, 42 };
    static const int _173[8] = { 48, 16, 56, 24, 50, 18, 58, 26 };
    static const int _182[8] = { 12, 44, 4, 36, 14, 46, 6, 38 };
    static const int _191[8] = { 60, 28, 52, 20, 62, 30, 54, 22 };
    static const int _200[8] = { 3, 35, 11, 43, 1, 33, 9, 41 };
    static const int _209[8] = { 51, 19, 59, 27, 49, 17, 57, 25 };
    static const int _218[8] = { 15, 47, 7, 39, 13, 45, 5, 37 };
    static const int _227[8] = { 63, 31, 55, 23, 61, 29, 53, 21 };
    static const int _228[8][8] = { { 0, 32, 8, 40, 2, 34, 10, 42 }, { 48, 16, 56, 24, 50, 18, 58, 26 }, { 12, 44, 4, 36, 14, 46, 6, 38 }, { 60, 28, 52, 20, 62, 30, 54, 22 }, { 3, 35, 11, 43, 1, 33, 9, 41 }, { 51, 19, 59, 27, 49, 17, 57, 25 }, { 15, 47, 7, 39, 13, 45, 5, 37 }, { 63, 31, 55, 23, 61, 29, 53, 21 } };

    cbuffer fs_core3d_params : register(b0)
    {
        float4 _386_fogColor : packoffset(c0);
    };

    Texture2D<float4> tex : register(t0);
    SamplerState nearestSampler : register(s0);

    static float4 gl_FragCoord;
    static float4 color;
    static float2 uv;
    static float fogDensity;
    static float4 frag_color;

    struct SPIRV_Cross_Input
    {
        noperspective float4 color : TEXCOORD0;
        noperspective float2 uv : TEXCOORD1;
        float fogDensity : TEXCOORD2;
        float4 gl_FragCoord : SV_Position;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };

    float mod(float x, float y)
    {
        return x - y * floor(x / y);
    }

    float2 mod(float2 x, float2 y)
    {
        return x - y * floor(x / y);
    }

    float3 mod(float3 x, float3 y)
    {
        return x - y * floor(x / y);
    }

    float4 mod(float4 x, float4 y)
    {
        return x - y * floor(x / y);
    }

    float4 RGBtoYUV(float4 rgba)
    {
        float _56 = mad(0.072200000286102294921875f, rgba.z, mad(rgba.x, 0.2125999927520751953125f, 0.715200006961822509765625f * rgba.y));
        float4 _452 = float4(_56, (rgba.z - _56) * 0.538909256458282470703125f, (rgba.x - _56) * 0.635001242160797119140625f, rgba.w);
        float2 _82 = _452.yz + 0.5f.xx;
        float4 _426 = _452;
        _426.y = _82.x;
        _426.z = _82.y;
        return _426;
    }

    float ditherChannelError(float col, float colMin, float colMax)
    {
        return abs(col - colMin) / abs(colMin - colMax);
    }

    float dither8x8(float2 position, float brightness)
    {
        int _145 = int(mod(position.x, 8.0f));
        float limit = 0.0f;
        if (_145 < 8)
        {
            limit = float(_228[_145][int(mod(position.y, 8.0f))] + 1) * 0.015625f;
        }
        return (brightness < limit) ? 0.0f : 1.0f;
    }

    float4 YUVtoRGB(inout float4 yuva)
    {
        float4 _90 = yuva;
        float2 _93 = _90.yz - 0.5f.xx;
        yuva.y = _93.x;
        yuva.z = _93.y;
        return float4(mad(yuva.z, 1.574800014495849609375f, yuva.x), mad(yuva.z, -0.4681240022182464599609375f, mad(yuva.y, -0.18732400238513946533203125f, yuva.x)), mad(yuva.y, 1.85559999942779541015625f, yuva.x), yuva.w);
    }

    float4 ditherAndPosterize(float2 position, float4 color_1, int colorDepth)
    {
        float4 param = color_1;
        float4 _267 = RGBtoYUV(param);
        float4 yuv = _267;
        float4 _277 = floor(_267 * float(colorDepth)) / float(colorDepth).xxxx;
        float4 _287 = ceil(_267 * float(colorDepth)) / float(colorDepth).xxxx;
        float _289 = _277.x;
        float _291 = _287.x;
        float param_1 = _267.x;
        float param_2 = _289;
        float param_3 = _291;
        float2 param_4 = position;
        float param_5 = ditherChannelError(param_1, param_2, param_3);
        float4 _434 = yuv;
        float4 _435 = _434;
        _435.x = lerp(_289, _291, dither8x8(param_4, param_5));
        yuv = _435;
        float _309 = _277.y;
        float _311 = _287.y;
        float param_6 = _434.y;
        float param_7 = _309;
        float param_8 = _311;
        float2 param_9 = position;
        float param_10 = ditherChannelError(param_6, param_7, param_8);
        float4 _441 = yuv;
        float4 _442 = _441;
        _442.y = lerp(_309, _311, dither8x8(param_9, param_10));
        yuv = _442;
        float _329 = _277.z;
        float _331 = _287.z;
        float param_11 = _441.z;
        float param_12 = _329;
        float param_13 = _331;
        float2 param_14 = position;
        float param_15 = ditherChannelError(param_11, param_12, param_13);
        float4 _448 = yuv;
        _448.z = lerp(_329, _331, dither8x8(param_14, param_15));
        yuv = _448;
        float4 param_16 = _448;
        float4 _350 = YUVtoRGB(param_16);
        return _350;
    }

    void frag_main()
    {
        float4 _370 = tex.Sample(nearestSampler, uv);
        float4 _371 = color * _370;
        float _373 = _371.w;
        if (_373 <= 0.00999999977648258209228515625f)
        {
            discard;
        }
        frag_color = float4(lerp(_371.xyz, _386_fogColor.xyz, fogDensity.xxx), _373);
        float2 param = gl_FragCoord.xy;
        float4 param_1 = frag_color;
        int param_2 = 32;
        frag_color = ditherAndPosterize(param, param_1, param_2);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        gl_FragCoord = stage_input.gl_FragCoord;
        gl_FragCoord.w = 1.0 / gl_FragCoord.w;
        color = stage_input.color;
        uv = stage_input.uv;
        fogDensity = stage_input.fogDensity;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const uint8_t fs_core3D_bytecode_hlsl5[4060] = {
    0x44,0x58,0x42,0x43,0xa7,0x00,0x63,0xc9,0xaf,0x71,0xa6,0x92,0x0e,0x15,0xcc,0xdc,
    0x79,0x56,0xd7,0x50,0x01,0x00,0x00,0x00,0xdc,0x0f,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0xa0,0x01,0x00,0x00,0x28,0x02,0x00,0x00,0x5c,0x02,0x00,0x00,
    0x40,0x0f,0x00,0x00,0x52,0x44,0x45,0x46,0x64,0x01,0x00,0x00,0x01,0x00,0x00,0x00,
    0xc0,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xff,0xff,
    0x10,0x81,0x00,0x00,0x3c,0x01,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9c,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xab,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0xaf,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x6e,0x65,0x61,0x72,0x65,0x73,0x74,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x00,0x74,0x65,0x78,0x00,0x66,0x73,0x5f,0x63,0x6f,
    0x72,0x65,0x33,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x00,0xaf,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0xd8,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x18,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x5f,0x33,0x38,0x36,
    0x5f,0x66,0x6f,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x00,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x00,0xab,0xab,0xab,0x01,0x00,0x03,0x00,0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0e,0x01,0x00,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,
    0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,
    0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,
    0x49,0x53,0x47,0x4e,0x80,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x68,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x68,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x03,0x00,0x00,
    0x68,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x71,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,0x03,0x00,0x00,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x2c,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,
    0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x00,0xab,0xab,0x53,0x48,0x45,0x58,
    0xdc,0x0c,0x00,0x00,0x50,0x00,0x00,0x00,0x37,0x03,0x00,0x00,0x6a,0x08,0x00,0x01,
    0x35,0x18,0x00,0x00,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x34,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x37,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,0x00,0x60,0x10,0x00,
    0x00,0x00,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x00,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x62,0x20,0x00,0x03,0xf2,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x62,0x20,0x00,0x03,0x32,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x62,0x10,0x00,0x03,
    0x12,0x10,0x10,0x00,0x02,0x00,0x00,0x00,0x64,0x20,0x00,0x04,0x32,0x10,0x10,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x05,0x00,0x00,0x00,0x45,0x00,0x00,0x8b,
    0xc2,0x00,0x00,0x80,0x43,0x55,0x15,0x00,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0xf2,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x1d,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x0a,0xd7,0x23,0x3c,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0d,0x00,0x04,0x03,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x16,0x16,0x10,0x80,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x16,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x16,0x86,0x20,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x72,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0x16,0x06,0x10,0x00,0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x0a,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x59,0x17,0x37,0x3f,0xd0,0xb3,0x59,0x3e,0x98,0xdd,0x93,0x3d,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x66,0x0a,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x10,0x80,0x41,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,0x62,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x06,0x01,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0xf5,0xf5,0x09,0x3f,0x71,0x8f,0x22,0x3f,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x42,0x00,0x00,0x00,0x42,
    0x00,0x00,0x00,0x42,0x00,0x00,0x00,0x00,0x41,0x00,0x00,0x05,0x72,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x0a,
    0x72,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,
    0x00,0x00,0x00,0x00,0x42,0x00,0x00,0x05,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,
    0x04,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0d,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x80,
    0x41,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3d,
    0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0d,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3d,
    0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x80,
    0x41,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0e,0x00,0x00,0x09,0x72,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x80,0x81,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x80,0x81,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x3e,0x41,0x00,0x00,0x05,0x82,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x41,0x0a,0x10,0x10,0x00,
    0x03,0x00,0x00,0x00,0x1b,0x00,0x00,0x05,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x22,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x08,0x00,0x00,0x00,0x1f,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x38,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x1a,0x10,0x10,0x00,
    0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x3e,0x41,0x00,0x00,0x05,
    0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0a,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x80,
    0x41,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x41,
    0x1a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x1b,0x00,0x00,0x05,0x22,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x29,0x00,0x00,0x07,
    0x42,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x1e,0x00,0x00,0x07,0x22,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x1e,0x00,0x00,0x08,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x90,0x90,0x00,0x1a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x2b,0x00,0x00,0x05,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x22,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3c,0x12,0x00,0x00,0x01,0x36,0x00,0x00,0x05,0x22,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x01,
    0x31,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x37,0x00,0x00,0x09,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x32,0x00,0x00,0x0d,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x3d,
    0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x80,0x41,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x1f,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x3e,
    0x41,0x00,0x00,0x05,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x41,0x1a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x1b,0x00,0x00,0x05,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x29,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x1e,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x1e,0x00,0x00,0x08,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x90,0x90,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x2b,0x00,0x00,0x05,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3c,0x12,0x00,0x00,0x01,0x36,0x00,0x00,0x05,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x15,0x00,0x00,0x01,0x31,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x37,0x00,0x00,0x09,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x32,0x00,0x00,0x09,0xa2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,
    0x06,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x00,0x00,0x00,0x00,
    0x56,0x05,0x10,0x00,0x03,0x00,0x00,0x00,0x1f,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x1a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x3e,
    0x41,0x00,0x00,0x05,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x41,0x1a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x1b,0x00,0x00,0x05,
    0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x29,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x1e,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1e,0x00,0x00,0x08,0x22,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x90,0x90,0x00,
    0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x2b,0x00,0x00,0x05,0x22,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3c,0x12,0x00,0x00,0x01,0x36,0x00,0x00,0x05,
    0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x15,0x00,0x00,0x01,0x31,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x37,0x00,0x00,0x09,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x32,0x00,0x00,0x09,0x52,0x00,0x10,0x00,0x04,0x00,0x00,0x00,
    0x56,0x05,0x10,0x00,0x00,0x00,0x00,0x00,0xa6,0x0a,0x10,0x00,0x00,0x00,0x00,0x00,
    0xa6,0x0a,0x10,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,
    0x32,0x00,0x00,0x0c,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x03,0x10,0x00,
    0x02,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x0c,0x93,0xc9,0x3f,0xdd,0xd1,0x3f,0xbe,
    0x4d,0x84,0xed,0x3f,0x00,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x09,0x22,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0xf3,0xad,0xef,0xbe,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x52,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0x06,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x82,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3e,0x00,0x00,0x01,
    0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,0x4d,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x40,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
static inline const sg_shader_desc* core3D_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].sem_name = "TEXCOORD";
            desc.attrs[0].sem_index = 0;
            desc.attrs[1].sem_name = "TEXCOORD";
            desc.attrs[1].sem_index = 1;
            desc.attrs[2].sem_name = "TEXCOORD";
            desc.attrs[2].sem_index = 2;
            desc.attrs[3].sem_name = "TEXCOORD";
            desc.attrs[3].sem_index = 3;
            desc.vs.bytecode.ptr = vs_core3D_bytecode_hlsl5;
            desc.vs.bytecode.size = 2788;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 336;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.bytecode.ptr = fs_core3D_bytecode_hlsl5;
            desc.fs.bytecode.size = 4060;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 16;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "core3D_shader";
        }
        return &desc;
    }
    return 0;
}
